---
layout: post
title: "java不可中断的阻塞调用"
description: "java不可中断阻塞调用"
category: "java"
tags: [ "java", "并发", "interruptible" ]
---
{% include JB/setup %}

之前同事遇到一个问题, 情况是这样的, 他有个模块调用外部接口, 而外部接口有问题(调用过去很多连接对方一直不应答, 也不关闭连接)
导致他这边的这个模块很快fd耗尽. 他说java没有像C里对socket进行option设置的api, 他想设置连接读超时. 这个C里面确实很容易实现. 

他打算的作法是将读操作放在一个线程中， 然后通过设置超时时间发起主动interrupt线程来达到目的。 发现根本行不通。 

我看了下他的代码， 发现其实问题其实与线程的中断原理有关. 

在java中, 许多阻塞调用都是通过提前返回， 或是抛出InterruptedException来响应中端的， 从而让开发者够取消任务的执行. 
但是并非所有的可阻塞方法或阻塞机制都能响应中断， 如果线程在socket I/O、 内置锁上阻塞， 对线程的中端是没有意义的。 
因为这些阻塞的调用时uninterruptible的。 那对这类阻塞调用如何达到类似取消的效果呢？ 其实通过关闭底层的socket套接字，
可让IO调用捕获SocketException异常来达到类似的效果

